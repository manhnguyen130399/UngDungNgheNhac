import java.awt.HeadlessException;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioSystem;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javazoom.jl.player.Player;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Murder
 */
public class UngDung extends javax.swing.JFrame {

    /**
     * Creates new form UngDung
     */
    JFileChooser fileDialog=new JFileChooser();
    String fileName;
    Player player;
    Thread playingThread;
    Thread strackBarThread;
    int max=0;
    Vector header =new Vector();
    Vector data=new Vector();
    DefaultTableModel tblModel;
    String fileList="D:\\data\\song.txt";
    
    public UngDung() {
        initComponents();
        header.add("Tên bài hát");
        header.add("Thời lượng bài hát");
        header.add("Vị trí ");
        loadSong();
        tblModel=(DefaultTableModel) this.tbleDanhSach.getModel();
        tblModel.setDataVector(data, header);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        lbBaihat = new javax.swing.JLabel();
        txtBaihatdangphat = new javax.swing.JTextField();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbleDanhSach = new javax.swing.JTable();
        btnChonBaiHat = new javax.swing.JButton();
        thoiluong = new javax.swing.JSlider();
        jMenuBar1 = new javax.swing.JMenuBar();
        filExit = new javax.swing.JMenu();
        mniOpen = new javax.swing.JMenuItem();
        mnPlay = new javax.swing.JMenuItem();
        mniEnd = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniExit = new javax.swing.JMenuItem();
        mnHelp = new javax.swing.JMenu();
        mniInFormation = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 51));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbBaihat.setText("Bài hát đang phát");

        txtBaihatdangphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBaihatdangphatActionPerformed(evt);
            }
        });

        btnStart.setBackground(new java.awt.Color(255, 255, 255));
        btnStart.setIcon(new javax.swing.ImageIcon("C:\\Users\\Duyen Pham\\Downloads\\Photo for Design Form\\Music.png")); // NOI18N
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stop.png"))); // NOI18N
        btnStop.setText("End");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Load.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Save.png"))); // NOI18N
        btnSave.setText("Lưu ");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete.png"))); // NOI18N
        btnRemove.setText("Xóa");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        tbleDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbleDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbleDanhSachMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbleDanhSachMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbleDanhSach);

        btnChonBaiHat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Search.png"))); // NOI18N
        btnChonBaiHat.setText("Chọn");
        btnChonBaiHat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonBaiHatActionPerformed(evt);
            }
        });

        thoiluong.setValue(0);

        filExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Folder.png"))); // NOI18N
        filExit.setText("File");
        filExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filExitActionPerformed(evt);
            }
        });

        mniOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mniOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Create.png"))); // NOI18N
        mniOpen.setText("Open");
        mniOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniOpenActionPerformed(evt);
            }
        });
        filExit.add(mniOpen);

        mnPlay.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        mnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Play.png"))); // NOI18N
        mnPlay.setText("Play");
        mnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnPlayActionPerformed(evt);
            }
        });
        filExit.add(mnPlay);

        mniEnd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        mniEnd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Remove.png"))); // NOI18N
        mniEnd.setText("End");
        mniEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEndActionPerformed(evt);
            }
        });
        filExit.add(mniEnd);
        filExit.add(jSeparator1);

        mniExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK));
        mniExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Exit.png"))); // NOI18N
        mniExit.setText("Exit ");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        filExit.add(mniExit);

        jMenuBar1.add(filExit);

        mnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Help.png"))); // NOI18N
        mnHelp.setText("Help");
        mnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnHelpActionPerformed(evt);
            }
        });

        mniInFormation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mniInFormation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Info.png"))); // NOI18N
        mniInFormation.setText("Information");
        mniInFormation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniInFormationActionPerformed(evt);
            }
        });
        mnHelp.add(mniInFormation);

        jMenuBar1.add(mnHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStop)
                .addGap(80, 80, 80)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbBaihat)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtBaihatdangphat, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChonBaiHat)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(thoiluong, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbBaihat)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBaihatdangphat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChonBaiHat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thoiluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnStop)
                    .addComponent(btnAdd)
                    .addComponent(btnSave)
                    .addComponent(btnRemove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEndActionPerformed
        // TODO add your handling code here:
        this.btnStopActionPerformed(null);
    }//GEN-LAST:event_mniEndActionPerformed

    private void mniInFormationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniInFormationActionPerformed
        // TODO add your handling code here:
        About about= new About();
        about.setLocationRelativeTo(null);
        //form center
        about.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        //dong farme k dong farm 9
        about.setVisible(true);
    }//GEN-LAST:event_mniInFormationActionPerformed

    private void mnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnPlayActionPerformed
        // TODO add your handling code here:
        this.btnStartActionPerformed(null);
    }//GEN-LAST:event_mnPlayActionPerformed

    private void txtBaihatdangphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBaihatdangphatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBaihatdangphatActionPerformed

    private  int getDuration(File f) throws Exception{
       int mili =0;
       int sec=0;
        AudioFileFormat fileFormat= AudioSystem.getAudioFileFormat(f);
        long microsecon=(long) fileFormat.properties().get("duration");
        mili=(int) (microsecon/100);
        sec=mili/1000;
        return sec;
        
    }
    private String getDurationFormat(File f) throws Exception{
         AudioFileFormat fileFormat= AudioSystem.getAudioFileFormat(f);
        long microsecon=(long) fileFormat.properties().get("duration");
        long sec=TimeUnit.MICROSECONDS.toSeconds(microsecon);
        long minu=TimeUnit.MICROSECONDS.toMinutes(microsecon);
        long gio=TimeUnit.MICROSECONDS.toHours(microsecon);
        return gio+":"+minu+":"+sec;
    }
    private void btnChonBaiHatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonBaiHatActionPerformed
        // TODO add your handling code here:
        try {
            int kq=fileDialog.showOpenDialog(this);
            if(kq==JFileChooser.APPROVE_OPTION)
            {
                File f=fileDialog.getSelectedFile();
                if(f.isFile())
                {
                    this.txtBaihatdangphat.setText(f.getCanonicalPath());
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnChonBaiHatActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
       fileName= this.txtBaihatdangphat.getText();
       FileInputStream fis=null;
       BufferedInputStream bis=null;
       File f=new File(fileName);
        try {
            fis= new FileInputStream(f);
            bis=new BufferedInputStream(fis);
            player=new Player(bis);
            max= getDuration(f);
            thoiluong.setMaximum(max);
        } catch (Exception e) {
        }
        playingThread =new Thread()
        {
            public void run()
            {
                try {
                    player.play();
                    
                } catch (Exception e) {
                }
            }
        };
        strackBarThread =new Thread()
        {
            public void run()
            {
                try {
                    int n=0;
                    while (!player.isComplete()&&playingThread.isAlive()) { 
                        thoiluong.setValue(n++);
                        Thread.sleep(1000);
                        
                    }
                    thoiluong.setValue(max);
                } catch (InterruptedException e) {
                }
                btnStopActionPerformed(null);
            }
        };
        playingThread.start();
        strackBarThread.start();
        this.btnStart.setEnabled(false);
        this.btnStop.setEnabled(true);
       
      
        
        
    }//GEN-LAST:event_btnStartActionPerformed

    void addFilessToTable(File[] f) throws Exception
    {
        for(File song:f)
        {
            String duration=getDurationFormat(song);
            String name=song.getName();
            String location=song.getCanonicalPath();
            Vector v=new Vector();
            v.add(name);
            v.add(duration);
            v.add(location);
            data.add(v);
            
        }
        this.tbleDanhSach.updateUI();
    }
  
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        fileDialog.setMultiSelectionEnabled(true);
        int result =fileDialog.showOpenDialog(this);
        if(result==JFileChooser.APPROVE_OPTION)
        {
            File[] f= fileDialog.getSelectedFiles();
            try {
                addFilessToTable(f);
            } catch (Exception ex) {
                Logger.getLogger(UngDung.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int row= tbleDanhSach.getSelectedRow();
        if(row>=0)
        {
            int kq= JOptionPane.showConfirmDialog(null,"bạn có chắc không",
                    "Xác nhận",JOptionPane.YES_NO_OPTION);
            if(kq==JOptionPane.YES_OPTION)
            {
                data.remove(row);
                tbleDanhSach.updateUI();
            }
        }
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void tbleDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbleDanhSachMouseClicked
        // TODO add your handling code here:
        int row= tbleDanhSach.getSelectedRow();
        String location=tbleDanhSach.getValueAt(row, 2).toString();
        txtBaihatdangphat.setText(location);
        //dem sl click
        
        if(evt.getClickCount()==2)
        {
            if(playingThread!=null)
            {
                btnStopActionPerformed(null);
            }
            btnStartActionPerformed(null);
        }
    }//GEN-LAST:event_tbleDanhSachMouseClicked

    private void tbleDanhSachMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbleDanhSachMouseReleased
        // TODO add your handling code here:
        if(tbleDanhSach.isEditing())
        {
            int row=tbleDanhSach.getSelectedRow();
            int column=tbleDanhSach.getSelectedColumn();
            tbleDanhSach.getCellEditor(row,column).cancelCellEditing();
            
        }
    }//GEN-LAST:event_tbleDanhSachMouseReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        try {
            File f= new File(fileList);
            PrintWriter pw= new PrintWriter(f);
            int n= data.size();
            for (int i = 0; i < n; i++) {
                Vector row=(Vector) data.get(i);
                String s= row.get(0)+","+row.get(1)+","+row.get(2);
                pw.println(s);
            }
            JOptionPane.showMessageDialog(null,"Save");
            pw.close();
            
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int kq= JOptionPane.showConfirmDialog(null,"Thoát","Thoát ứng dụng",
                JOptionPane.YES_NO_OPTION);
        if(kq==JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
        else
        {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
                
    }//GEN-LAST:event_formWindowClosing

    private void mniOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniOpenActionPerformed
        // TODO add your handling code here:
        this.btnChonBaiHatActionPerformed(null);
    }//GEN-LAST:event_mniOpenActionPerformed

    private void filExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filExitActionPerformed
        // TODO add your handling code here:
       // formWindowClosing(null);
    }//GEN-LAST:event_filExitActionPerformed

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        // TODO add your handling code here:
        formWindowClosing(null);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnHelpActionPerformed
        // TODO add your handling code here:
        
        //hiện ra
    }//GEN-LAST:event_mnHelpActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        // TODO add your handling code here:
        if(player!=null)
        {
            player.close();
        }
        this.btnStart.setEnabled(true);
        this.btnStop.setEnabled(false);
        this.thoiluong.setValue(0);
        playingThread.interrupt();
        strackBarThread.interrupt();

    }//GEN-LAST:event_btnStopActionPerformed

    void loadSong()
    {
        try {
            FileReader fr= new FileReader(fileList);
            BufferedReader br= new BufferedReader(fr);
            String song;
            while ((song=br.readLine())!=null) {   
                String[]infor=song.split(",");
                String name=infor[0];
                String time=infor[1];
                String location=infor[2];
                Vector row= new Vector();
                row.add(name);
                row.add(time);
                row.add(location);
                data.add(row);
                
            }
            br.close();
            fr.close();
            
            
        } catch (Exception e) {
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UngDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UngDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UngDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UngDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UngDung().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChonBaiHat;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JMenu filExit;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lbBaihat;
    private javax.swing.JMenu mnHelp;
    private javax.swing.JMenuItem mnPlay;
    private javax.swing.JMenuItem mniEnd;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniInFormation;
    private javax.swing.JMenuItem mniOpen;
    private javax.swing.JTable tbleDanhSach;
    private javax.swing.JSlider thoiluong;
    private javax.swing.JTextField txtBaihatdangphat;
    // End of variables declaration//GEN-END:variables
}
